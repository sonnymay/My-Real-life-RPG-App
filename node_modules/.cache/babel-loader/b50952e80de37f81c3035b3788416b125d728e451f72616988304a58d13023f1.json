{"ast":null,"code":"import React,{useState,useEffect,useRef}from\"react\";import{Play,Pause,Plus,CheckCircle,ArrowRight,Trash2,X,Save,Clock}from\"lucide-react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const RealLifeRPG=()=>{// Load saved data from localStorage or use defaults\nconst loadSavedData=()=>{try{// Clear existing localStorage for a fresh start (you can remove this line later)\nlocalStorage.removeItem(\"realLifeRPGData\");const savedData=localStorage.getItem(\"realLifeRPGData\");if(savedData){const parsedData=JSON.parse(savedData);// Override timer values to ensure we start at 0\nreturn{...parsedData,totalTimeTrackedSeconds:0,dailyTrackedMinutes:0,levelsGained:0};}}catch(error){console.error(\"Error loading saved data:\",error);}// Default data if nothing is saved\nreturn{level:5,exp:23,jobClass:\"Swordsman\",job:\"Novice\",totalTimeTrackedSeconds:0,// Starting at 00:00:00\ndailyGoalMinutes:180,// 3 hours\ndailyTrackedMinutes:0,// Starting at 0 minutes\nlevelsGained:0,taskList:[{id:1,name:\"Complete project proposal\",completed:false},{id:2,name:\"Exercise for 30 minutes\",completed:true},{id:3,name:\"Read 20 pages\",completed:false},{id:4,name:\"Learn React hooks\",completed:false}]};};const savedData=loadSavedData();// State management\nconst[level,setLevel]=useState(savedData.level);const[exp,setExp]=useState(savedData.exp);const[jobClass,setJobClass]=useState(savedData.jobClass);const[job,setJob]=useState(savedData.job);const[isTimerRunning,setIsTimerRunning]=useState(false);const[showClassSelector,setShowClassSelector]=useState(false);const[taskList,setTaskList]=useState(savedData.taskList);const[newTaskName,setNewTaskName]=useState(\"\");const[showAddTask,setShowAddTask]=useState(false);// Timer state\nconst[elapsedSeconds,setElapsedSeconds]=useState(0);// Current session time\nconst[totalTimeTrackedSeconds,setTotalTimeTrackedSeconds]=useState(savedData.totalTimeTrackedSeconds);const[dailyGoalMinutes,setDailyGoalMinutes]=useState(savedData.dailyGoalMinutes);const[dailyTrackedMinutes,setDailyTrackedMinutes]=useState(savedData.dailyTrackedMinutes);const[levelsGained,setLevelsGained]=useState(savedData.levelsGained);// References for timer\nconst timerRef=useRef(null);const startTimeRef=useRef(null);// Reset confirmation\nconst[showResetConfirm,setShowResetConfirm]=useState(false);// Progress percentage to next level\nconst expToLevel=100;const expPercentage=exp/expToLevel*100;// Save data to localStorage\nconst saveData=()=>{try{const dataToSave={level,exp,jobClass,job,totalTimeTrackedSeconds,dailyGoalMinutes,dailyTrackedMinutes,levelsGained,taskList};localStorage.setItem(\"realLifeRPGData\",JSON.stringify(dataToSave));// Show save notification (in a real app)\nconsole.log(\"Game progress saved!\");}catch(error){console.error(\"Error saving data:\",error);}};// Reset progress for a new day (would typically be automatic)\nconst resetDailyProgress=()=>{setDailyTrackedMinutes(0);setLevelsGained(0);saveData();};// Format time for display\nconst formatTime=totalSeconds=>{const hours=Math.floor(totalSeconds/3600);const minutes=Math.floor(totalSeconds%3600/60);const seconds=totalSeconds%60;return`${String(hours).padStart(2,\"0\")}:${String(minutes).padStart(2,\"0\")}:${String(seconds).padStart(2,\"0\")}`;};// Get time display based on timer state\nconst getTimeDisplay=()=>{if(isTimerRunning){// Show current session + total time when running\nconst totalSeconds=totalTimeTrackedSeconds+elapsedSeconds;return formatTime(totalSeconds);}else{// Show just total time when paused\nreturn formatTime(totalTimeTrackedSeconds);}};// Timer effect - completely rewritten for reliability\nuseEffect(()=>{if(isTimerRunning){// Record the start time of this session\nstartTimeRef.current=Date.now();timerRef.current=setInterval(()=>{// Calculate current session time\nconst sessionTime=Math.floor((Date.now()-startTimeRef.current)/1000);// Update elapsed seconds for this session\nsetElapsedSeconds(sessionTime);// Check for minute increments (every 60 seconds)\nif(sessionTime>0&&sessionTime%60===0){// Update daily tracked minutes\nsetDailyTrackedMinutes(prev=>prev+1);// Check for level gain (every 5 minutes = 300 seconds)\nif(sessionTime%300===0){gainLevel();}}},1000);}else{// Just clear the timer interval - we'll update totalTime in toggleTimer\nclearInterval(timerRef.current);}// Cleanup on unmount\nreturn()=>{clearInterval(timerRef.current);};},[isTimerRunning]);// Function to gain a level\nconst gainLevel=()=>{// Increment level\nsetLevel(prevLevel=>prevLevel+1);// Increment levels gained today\nsetLevelsGained(prev=>prev+1);// Check if job should change based on new level\nconst newLevel=level+1;updateJobBasedOnLevel(newLevel,jobClass);// Play a sound or animation here in a full implementation\nconsole.log(\"Level up!\");};// Get the base class color scheme\nconst getClassColorScheme=()=>{switch(jobClass){case\"Swordsman\":return{badge:\"bg-red-100 text-red-800\",progress:\"bg-red-600\",next:\"bg-red-500\",character:\"bg-red-500\"};case\"Archer\":return{badge:\"bg-green-100 text-green-800\",progress:\"bg-green-600\",next:\"bg-green-500\",character:\"bg-green-500\"};case\"Mage\":return{badge:\"bg-purple-100 text-purple-800\",progress:\"bg-purple-600\",next:\"bg-purple-500\",character:\"bg-purple-500\"};case\"Thief\":return{badge:\"bg-gray-100 text-gray-800\",progress:\"bg-gray-600\",next:\"bg-gray-500\",character:\"bg-gray-500\"};case\"Acolyte\":return{badge:\"bg-yellow-100 text-yellow-800\",progress:\"bg-yellow-600\",next:\"bg-yellow-500\",character:\"bg-yellow-500\"};case\"Merchant\":return{badge:\"bg-amber-100 text-amber-800\",progress:\"bg-amber-600\",next:\"bg-amber-500\",character:\"bg-amber-500\"};default:return{badge:\"bg-blue-100 text-blue-800\",progress:\"bg-blue-600\",next:\"bg-blue-500\",character:\"bg-blue-500\"};}};const colors=getClassColorScheme();// Calculate next job threshold based on class\nconst getNextJobInfo=()=>{// Define job progressions for different classes\nconst jobProgressions={Swordsman:[{level:11,job:\"Swordsman\"},{level:31,job:\"Knight\"},{level:51,job:\"Lord Knight\"},{level:71,job:\"Rune Knight\"},{level:91,job:\"Eternal Knight\"},{level:100,job:\"Max Level\"}],Archer:[{level:11,job:\"Archer\"},{level:31,job:\"Hunter\"},{level:51,job:\"Sniper\"},{level:71,job:\"Falcon Ranger\"},{level:91,job:\"Eternal Marksman\"},{level:100,job:\"Max Level\"}],Mage:[{level:11,job:\"Mage\"},{level:31,job:\"Wizard\"},{level:51,job:\"High Wizard\"},{level:71,job:\"Archmage\"},{level:91,job:\"Eternal Sorcerer\"},{level:100,job:\"Max Level\"}],Thief:[{level:11,job:\"Thief\"},{level:31,job:\"Assassin\"},{level:51,job:\"Guillotine Cross\"},{level:71,job:\"Shadow Reaper\"},{level:91,job:\"Eternal Phantom\"},{level:100,job:\"Max Level\"}],Acolyte:[{level:11,job:\"Acolyte\"},{level:31,job:\"Priest\"},{level:51,job:\"High Priest\"},{level:71,job:\"Divine Cleric\"},{level:91,job:\"Eternal Saint\"},{level:100,job:\"Max Level\"}],Merchant:[{level:11,job:\"Merchant\"},{level:31,job:\"Blacksmith\"},{level:51,job:\"Whitesmith\"},{level:71,job:\"Titan Forgemaster\"},{level:91,job:\"Eternal Tycoon\"},{level:100,job:\"Max Level\"}]};// Get the progression for the current class\nconst progression=jobProgressions[jobClass]||jobProgressions.Swordsman;// Find the next job in the progression\nfor(const jobInfo of progression){if(level<jobInfo.level){return jobInfo;}}// If at max level\nreturn progression[progression.length-1];};const nextJobInfo=getNextJobInfo();// Calculate progress to next job\nconst jobProgressPercentage=level/nextJobInfo.level*100;// Handle class selection\nconst selectClass=className=>{setJobClass(className);// Reset job if needed based on level\nupdateJobBasedOnLevel(level,className);setShowClassSelector(false);};// Update job title based on level and selected class\nconst updateJobBasedOnLevel=(currentLevel,selectedClass)=>{const jobProgressions={Swordsman:[{level:1,job:\"Novice\"},{level:11,job:\"Swordsman\"},{level:31,job:\"Knight\"},{level:51,job:\"Lord Knight\"},{level:71,job:\"Rune Knight\"},{level:91,job:\"Eternal Knight\"}],Archer:[{level:1,job:\"Novice\"},{level:11,job:\"Archer\"},{level:31,job:\"Hunter\"},{level:51,job:\"Sniper\"},{level:71,job:\"Falcon Ranger\"},{level:91,job:\"Eternal Marksman\"}],Mage:[{level:1,job:\"Novice\"},{level:11,job:\"Mage\"},{level:31,job:\"Wizard\"},{level:51,job:\"High Wizard\"},{level:71,job:\"Archmage\"},{level:91,job:\"Eternal Sorcerer\"}],Thief:[{level:1,job:\"Novice\"},{level:11,job:\"Thief\"},{level:31,job:\"Assassin\"},{level:51,job:\"Guillotine Cross\"},{level:71,job:\"Shadow Reaper\"},{level:91,job:\"Eternal Phantom\"}],Acolyte:[{level:1,job:\"Novice\"},{level:11,job:\"Acolyte\"},{level:31,job:\"Priest\"},{level:51,job:\"High Priest\"},{level:71,job:\"Divine Cleric\"},{level:91,job:\"Eternal Saint\"}],Merchant:[{level:1,job:\"Novice\"},{level:11,job:\"Merchant\"},{level:31,job:\"Blacksmith\"},{level:51,job:\"Whitesmith\"},{level:71,job:\"Titan Forgemaster\"},{level:91,job:\"Eternal Tycoon\"}]};// Get the progression for the selected class\nconst progression=jobProgressions[selectedClass]||jobProgressions.Swordsman;// Find the current job based on level\nlet currentJob=progression[0].job;for(let i=progression.length-1;i>=0;i--){if(currentLevel>=progression[i].level){currentJob=progression[i].job;break;}}setJob(currentJob);};const toggleTimer=()=>{// If we're stopping the timer\nif(isTimerRunning){// Add current session time to total time\nsetTotalTimeTrackedSeconds(prev=>prev+elapsedSeconds);// Save progress\nsetTimeout(()=>saveData(),100);}else{// Starting the timer, reset session time\nsetElapsedSeconds(0);}// Toggle timer state\nsetIsTimerRunning(!isTimerRunning);};// Reset timer functionality\nconst resetTimer=()=>{// Stop timer if running\nif(isTimerRunning){setIsTimerRunning(false);}// Reset all timer values\nsetTotalTimeTrackedSeconds(0);setElapsedSeconds(0);setDailyTrackedMinutes(0);setLevelsGained(0);// Save the reset state\nsetTimeout(()=>saveData(),100);// Hide confirmation\nsetShowResetConfirm(false);};const toggleTaskCompletion=id=>{setTaskList(taskList.map(task=>task.id===id?{...task,completed:!task.completed}:task));// Save task state\nsetTimeout(saveData,100);};const deleteTask=id=>{setTaskList(taskList.filter(task=>task.id!==id));// Save task state\nsetTimeout(saveData,100);};const addNewTask=()=>{if(newTaskName.trim()===\"\")return;const newTask={id:Date.now(),// Unique ID based on timestamp\nname:newTaskName,completed:false};setTaskList([...taskList,newTask]);setNewTaskName(\"\");setShowAddTask(false);// Save task state\nsetTimeout(saveData,100);};// Calculate daily progress percentage\nconst dailyProgressPercentage=Math.min(dailyTrackedMinutes/dailyGoalMinutes*100,100);return/*#__PURE__*/_jsxs(\"div\",{className:\"font-sans p-4 max-w-md mx-auto bg-gray-100 rounded-lg shadow-md\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h1\",{className:\"text-xl font-bold\",children:\"Real-Life RPG\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:saveData,className:\"flex items-center text-xs px-2 py-1 bg-blue-100 text-blue-800 hover:bg-blue-200 rounded-md\",children:[/*#__PURE__*/_jsx(Save,{size:14,className:\"mr-1\"}),\" Save\"]}),/*#__PURE__*/_jsxs(\"button\",{onClick:resetDailyProgress,className:\"flex items-center text-xs px-2 py-1 bg-gray-100 text-gray-800 hover:bg-gray-200 rounded-md\",children:[/*#__PURE__*/_jsx(Clock,{size:14,className:\"mr-1\"}),\" Reset Day\"]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg mb-4 shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-2\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold\",children:\"Your Character\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex gap-2 items-center\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowClassSelector(!showClassSelector),className:\"text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 rounded-md\",children:\"Change Class\"}),/*#__PURE__*/_jsx(\"div\",{className:`px-3 py-1 rounded-full text-sm font-medium ${colors.badge}`,children:job})]})]}),showClassSelector&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-medium mb-2\",children:\"Select Job Class:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-2 gap-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Swordsman\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Swordsman\"?\"bg-red-100 text-red-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Swordsman\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Archer\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Archer\"?\"bg-green-100 text-green-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Archer\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Mage\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Mage\"?\"bg-purple-100 text-purple-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Mage\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Thief\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Thief\"?\"bg-gray-100 text-gray-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Thief\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Acolyte\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Acolyte\"?\"bg-yellow-100 text-yellow-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Acolyte\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>selectClass(\"Merchant\"),className:`p-2 rounded-md text-xs text-center ${jobClass===\"Merchant\"?\"bg-amber-100 text-amber-800 font-bold\":\"bg-gray-100 hover:bg-gray-200\"}`,children:\"Merchant\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium\",children:[\"Level \",level]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium\",children:[exp,\"/\",expToLevel,\" EXP\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:`h-2 rounded-full ${colors.progress}`,style:{width:`${expPercentage}%`}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-2\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between mb-1\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium\",children:[\"Next Job: \",nextJobInfo.job]}),/*#__PURE__*/_jsxs(\"span\",{className:\"text-sm font-medium\",children:[\"Level \",level,\"/\",nextJobInfo.level]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:`h-2 rounded-full ${colors.next}`,style:{width:`${jobProgressPercentage}%`}})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-3 pt-2 border-t border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Novice\"}),/*#__PURE__*/_jsx(\"span\",{children:jobClass===\"Novice\"?\"Novice\":jobClass}),/*#__PURE__*/_jsx(\"span\",{children:jobClass===\"Swordsman\"?\"Knight\":jobClass===\"Archer\"?\"Hunter\":jobClass===\"Mage\"?\"Wizard\":jobClass===\"Thief\"?\"Assassin\":jobClass===\"Acolyte\"?\"Priest\":jobClass===\"Merchant\"?\"Blacksmith\":\"\"}),/*#__PURE__*/_jsx(\"span\",{children:jobClass===\"Swordsman\"?\"Lord Knight\":jobClass===\"Archer\"?\"Sniper\":jobClass===\"Mage\"?\"High Wizard\":jobClass===\"Thief\"?\"Guillotine Cross\":jobClass===\"Acolyte\"?\"High Priest\":jobClass===\"Merchant\"?\"Whitesmith\":\"\"}),/*#__PURE__*/_jsx(\"span\",{children:jobClass===\"Swordsman\"?\"Rune Knight\":jobClass===\"Archer\"?\"Falcon Ranger\":jobClass===\"Mage\"?\"Archmage\":jobClass===\"Thief\"?\"Shadow Reaper\":jobClass===\"Acolyte\"?\"Divine Cleric\":jobClass===\"Merchant\"?\"Titan Forgemaster\":\"\"}),/*#__PURE__*/_jsx(\"span\",{children:jobClass===\"Swordsman\"?\"Eternal Knight\":jobClass===\"Archer\"?\"Eternal Marksman\":jobClass===\"Mage\"?\"Eternal Sorcerer\":jobClass===\"Thief\"?\"Eternal Phantom\":jobClass===\"Acolyte\"?\"Eternal Saint\":jobClass===\"Merchant\"?\"Eternal Tycoon\":\"\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-1 mt-1\",children:/*#__PURE__*/_jsx(\"div\",{className:`h-1 rounded-l-full bg-gray-500`,style:{width:`${level/100*100}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-gray-400 mt-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"1\"}),/*#__PURE__*/_jsx(\"span\",{children:\"11\"}),/*#__PURE__*/_jsx(\"span\",{children:\"31\"}),/*#__PURE__*/_jsx(\"span\",{children:\"51\"}),/*#__PURE__*/_jsx(\"span\",{children:\"71\"}),/*#__PURE__*/_jsx(\"span\",{children:\"91\"}),/*#__PURE__*/_jsx(\"span\",{children:\"100\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"w-full h-48 bg-gradient-to-b from-orange-200 via-red-200 to-purple-300 rounded-lg mb-4 relative overflow-hidden\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-0 w-full h-16 bg-gray-800\"}),/*#__PURE__*/_jsx(\"div\",{className:\"absolute bottom-16 left-1/4 w-32 h-32 flex items-center justify-center\",children:/*#__PURE__*/_jsx(\"img\",{src:`/images/characters/${job.toLowerCase().replace(\" \",\"-\")}.png`,alt:job,className:\"h-40 object-contain\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute top-2 right-2 bg-white bg-opacity-70 p-2 rounded-full\",children:[jobClass===\"Swordsman\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-red-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"S\"}),jobClass===\"Archer\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"A\"}),jobClass===\"Mage\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"M\"}),jobClass===\"Thief\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-gray-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"T\"}),jobClass===\"Acolyte\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"A\"}),jobClass===\"Merchant\"&&/*#__PURE__*/_jsx(\"div\",{className:\"w-8 h-8 bg-amber-500 rounded-full flex items-center justify-center text-white font-bold\",children:\"M\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"absolute bottom-2 left-2 bg-white bg-opacity-70 px-2 py-1 rounded-md text-sm font-bold\",children:[\"LVL \",level]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg mb-4 shadow border-2 border-green-300\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold\",children:\"Training Session\"}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm font-bold text-green-600 bg-green-100 px-2 py-1 rounded\",children:\"LEVEL SOURCE\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center space-x-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-3xl font-bold mb-1\",children:getTimeDisplay()}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-sm text-gray-500 font-bold\",children:[levelsGained,\" levels gained today\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm bg-green-100 text-green-800 px-2 py-1 mt-1 rounded-md\",children:\"5 minutes = 1 level\"}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowResetConfirm(true),className:\"text-xs text-red-600 hover:text-red-800 mt-2\",children:\"Reset Timer\"})]}),/*#__PURE__*/_jsx(\"button\",{onClick:toggleTimer,className:`p-4 rounded-full ${isTimerRunning?\"bg-red-100 text-red-500\":\"bg-green-500 text-white\"}`,children:isTimerRunning?/*#__PURE__*/_jsx(Pause,{size:28}):/*#__PURE__*/_jsx(Play,{size:28})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 pt-3 border-t border-gray-100\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 mb-1\",children:[/*#__PURE__*/_jsx(\"span\",{children:\"Daily Progress\"}),/*#__PURE__*/_jsxs(\"span\",{children:[Math.floor(dailyTrackedMinutes/60),\"h \",dailyTrackedMinutes%60,\"m / \",Math.floor(dailyGoalMinutes/60),\"h goal (\",Math.floor(dailyTrackedMinutes/5),\" levels)\"]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"w-full bg-gray-200 rounded-full h-2\",children:/*#__PURE__*/_jsx(\"div\",{className:\"bg-green-500 h-2 rounded-full\",style:{width:`${dailyProgressPercentage}%`}})}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between text-xs text-gray-500 mt-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[\"Level Progress:\",/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[\" \",\"5 mins = 1 level\"]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[\"Current pace:\",/*#__PURE__*/_jsxs(\"span\",{className:\"font-medium text-green-600\",children:[\" \",\"12 levels/hour\"]})]})]})]}),showResetConfirm&&/*#__PURE__*/_jsx(\"div\",{className:\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg max-w-sm w-full mx-4\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-bold mb-2\",children:\"Reset Timer?\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 mb-4\",children:\"This will reset your timer to 00:00:00. Your progress for today will be lost. Are you sure?\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-2\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>setShowResetConfirm(false),className:\"px-4 py-2 border border-gray-300 rounded text-gray-700\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:resetTimer,className:\"px-4 py-2 bg-red-600 text-white rounded\",children:\"Reset\"})]})]})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-4 rounded-lg shadow\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-between items-center mb-3\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-lg font-semibold\",children:\"Quests / To-Do List\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-xs text-gray-500 mt-1\",children:[taskList.filter(task=>task.completed).length,\"/\",taskList.length,\" completed\"]})]}),/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowAddTask(!showAddTask),className:\"text-blue-500 flex items-center text-sm\",children:[showAddTask?/*#__PURE__*/_jsx(X,{size:16,className:\"mr-1\"}):/*#__PURE__*/_jsx(Plus,{size:16,className:\"mr-1\"}),showAddTask?\"Cancel\":\"Add Task\"]})]}),showAddTask&&/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 p-3 bg-blue-50 rounded-lg border border-blue-200\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:newTaskName,onChange:e=>setNewTaskName(e.target.value),placeholder:\"Enter new task...\",className:\"w-full p-2 rounded border border-blue-200 mb-2\"}),/*#__PURE__*/_jsx(\"button\",{onClick:addNewTask,className:\"bg-blue-500 text-white px-3 py-1 rounded-md text-sm\",disabled:newTaskName.trim()===\"\",children:\"Add Quest\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"mb-3 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-xs text-yellow-700\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Note:\"}),\" Tasks don't affect leveling. Only running the timer counts toward levels (5 mins = 1 level).\"]}),/*#__PURE__*/_jsx(\"ul\",{className:\"space-y-2\",children:[...taskList].sort((a,b)=>{// Sort by completion status (incomplete first)\nif(a.completed!==b.completed){return a.completed?1:-1;}// Keep original order within each group\nreturn 0;}).map(task=>/*#__PURE__*/_jsxs(\"li\",{className:`p-3 rounded-lg flex items-center justify-between ${task.completed?\"bg-gray-100\":\"bg-blue-50\"}`,children:[/*#__PURE__*/_jsx(\"span\",{className:task.completed?\"line-through text-gray-500\":\"\",children:task.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex space-x-1\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:()=>toggleTaskCompletion(task.id),className:`p-1 rounded-full ${task.completed?\"text-green-500\":\"text-gray-400\"} hover:bg-gray-100`,title:\"Mark as complete\",children:/*#__PURE__*/_jsx(CheckCircle,{size:20,className:task.completed?\"fill-green-500\":\"\"})}),/*#__PURE__*/_jsx(\"button\",{onClick:()=>deleteTask(task.id),className:\"p-1 rounded-full text-red-400 hover:bg-gray-100\",title:\"Delete task\",children:/*#__PURE__*/_jsx(Trash2,{size:20})})]})]},task.id))}),taskList.length===0&&/*#__PURE__*/_jsx(\"div\",{className:\"text-center py-6 text-gray-500\",children:\"No quests yet. Add your first quest!\"}),taskList.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"mt-4 text-center\",children:/*#__PURE__*/_jsxs(\"button\",{className:\"text-blue-600 text-sm flex items-center mx-auto\",children:[\"See all quests \",/*#__PURE__*/_jsx(ArrowRight,{size:16,className:\"ml-1\"})]})})]})]});};export default RealLifeRPG;","map":{"version":3,"names":["React","useState","useEffect","useRef","Play","Pause","Plus","CheckCircle","ArrowRight","Trash2","X","Save","Clock","jsx","_jsx","jsxs","_jsxs","RealLifeRPG","loadSavedData","localStorage","removeItem","savedData","getItem","parsedData","JSON","parse","totalTimeTrackedSeconds","dailyTrackedMinutes","levelsGained","error","console","level","exp","jobClass","job","dailyGoalMinutes","taskList","id","name","completed","setLevel","setExp","setJobClass","setJob","isTimerRunning","setIsTimerRunning","showClassSelector","setShowClassSelector","setTaskList","newTaskName","setNewTaskName","showAddTask","setShowAddTask","elapsedSeconds","setElapsedSeconds","setTotalTimeTrackedSeconds","setDailyGoalMinutes","setDailyTrackedMinutes","setLevelsGained","timerRef","startTimeRef","showResetConfirm","setShowResetConfirm","expToLevel","expPercentage","saveData","dataToSave","setItem","stringify","log","resetDailyProgress","formatTime","totalSeconds","hours","Math","floor","minutes","seconds","String","padStart","getTimeDisplay","current","Date","now","setInterval","sessionTime","prev","gainLevel","clearInterval","prevLevel","newLevel","updateJobBasedOnLevel","getClassColorScheme","badge","progress","next","character","colors","getNextJobInfo","jobProgressions","Swordsman","Archer","Mage","Thief","Acolyte","Merchant","progression","jobInfo","length","nextJobInfo","jobProgressPercentage","selectClass","className","currentLevel","selectedClass","currentJob","i","toggleTimer","setTimeout","resetTimer","toggleTaskCompletion","map","task","deleteTask","filter","addNewTask","trim","newTask","dailyProgressPercentage","min","children","onClick","size","style","width","src","toLowerCase","replace","alt","type","value","onChange","e","target","placeholder","disabled","sort","a","b","title"],"sources":["C:/Users/SonnyMay/Downloads/My-Real-life-RPG-App/src/RealLifeRPG.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport {\r\n  Play,\r\n  Pause,\r\n  Plus,\r\n  CheckCircle,\r\n  ArrowRight,\r\n  Trash2,\r\n  X,\r\n  Save,\r\n  Clock,\r\n} from \"lucide-react\";\r\n\r\nconst RealLifeRPG = () => {\r\n  // Load saved data from localStorage or use defaults\r\n  const loadSavedData = () => {\r\n    try {\r\n      // Clear existing localStorage for a fresh start (you can remove this line later)\r\n      localStorage.removeItem(\"realLifeRPGData\");\r\n\r\n      const savedData = localStorage.getItem(\"realLifeRPGData\");\r\n      if (savedData) {\r\n        const parsedData = JSON.parse(savedData);\r\n        // Override timer values to ensure we start at 0\r\n        return {\r\n          ...parsedData,\r\n          totalTimeTrackedSeconds: 0,\r\n          dailyTrackedMinutes: 0,\r\n          levelsGained: 0,\r\n        };\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error loading saved data:\", error);\r\n    }\r\n\r\n    // Default data if nothing is saved\r\n    return {\r\n      level: 5,\r\n      exp: 23,\r\n      jobClass: \"Swordsman\",\r\n      job: \"Novice\",\r\n      totalTimeTrackedSeconds: 0, // Starting at 00:00:00\r\n      dailyGoalMinutes: 180, // 3 hours\r\n      dailyTrackedMinutes: 0, // Starting at 0 minutes\r\n      levelsGained: 0,\r\n      taskList: [\r\n        { id: 1, name: \"Complete project proposal\", completed: false },\r\n        { id: 2, name: \"Exercise for 30 minutes\", completed: true },\r\n        { id: 3, name: \"Read 20 pages\", completed: false },\r\n        { id: 4, name: \"Learn React hooks\", completed: false },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const savedData = loadSavedData();\r\n\r\n  // State management\r\n  const [level, setLevel] = useState(savedData.level);\r\n  const [exp, setExp] = useState(savedData.exp);\r\n  const [jobClass, setJobClass] = useState(savedData.jobClass);\r\n  const [job, setJob] = useState(savedData.job);\r\n  const [isTimerRunning, setIsTimerRunning] = useState(false);\r\n  const [showClassSelector, setShowClassSelector] = useState(false);\r\n  const [taskList, setTaskList] = useState(savedData.taskList);\r\n  const [newTaskName, setNewTaskName] = useState(\"\");\r\n  const [showAddTask, setShowAddTask] = useState(false);\r\n\r\n  // Timer state\r\n  const [elapsedSeconds, setElapsedSeconds] = useState(0); // Current session time\r\n  const [totalTimeTrackedSeconds, setTotalTimeTrackedSeconds] = useState(\r\n    savedData.totalTimeTrackedSeconds\r\n  );\r\n  const [dailyGoalMinutes, setDailyGoalMinutes] = useState(\r\n    savedData.dailyGoalMinutes\r\n  );\r\n  const [dailyTrackedMinutes, setDailyTrackedMinutes] = useState(\r\n    savedData.dailyTrackedMinutes\r\n  );\r\n  const [levelsGained, setLevelsGained] = useState(savedData.levelsGained);\r\n\r\n  // References for timer\r\n  const timerRef = useRef(null);\r\n  const startTimeRef = useRef(null);\r\n\r\n  // Reset confirmation\r\n  const [showResetConfirm, setShowResetConfirm] = useState(false);\r\n\r\n  // Progress percentage to next level\r\n  const expToLevel = 100;\r\n  const expPercentage = (exp / expToLevel) * 100;\r\n\r\n  // Save data to localStorage\r\n  const saveData = () => {\r\n    try {\r\n      const dataToSave = {\r\n        level,\r\n        exp,\r\n        jobClass,\r\n        job,\r\n        totalTimeTrackedSeconds,\r\n        dailyGoalMinutes,\r\n        dailyTrackedMinutes,\r\n        levelsGained,\r\n        taskList,\r\n      };\r\n      localStorage.setItem(\"realLifeRPGData\", JSON.stringify(dataToSave));\r\n      // Show save notification (in a real app)\r\n      console.log(\"Game progress saved!\");\r\n    } catch (error) {\r\n      console.error(\"Error saving data:\", error);\r\n    }\r\n  };\r\n\r\n  // Reset progress for a new day (would typically be automatic)\r\n  const resetDailyProgress = () => {\r\n    setDailyTrackedMinutes(0);\r\n    setLevelsGained(0);\r\n    saveData();\r\n  };\r\n\r\n  // Format time for display\r\n  const formatTime = (totalSeconds) => {\r\n    const hours = Math.floor(totalSeconds / 3600);\r\n    const minutes = Math.floor((totalSeconds % 3600) / 60);\r\n    const seconds = totalSeconds % 60;\r\n\r\n    return `${String(hours).padStart(2, \"0\")}:${String(minutes).padStart(\r\n      2,\r\n      \"0\"\r\n    )}:${String(seconds).padStart(2, \"0\")}`;\r\n  };\r\n\r\n  // Get time display based on timer state\r\n  const getTimeDisplay = () => {\r\n    if (isTimerRunning) {\r\n      // Show current session + total time when running\r\n      const totalSeconds = totalTimeTrackedSeconds + elapsedSeconds;\r\n      return formatTime(totalSeconds);\r\n    } else {\r\n      // Show just total time when paused\r\n      return formatTime(totalTimeTrackedSeconds);\r\n    }\r\n  };\r\n\r\n  // Timer effect - completely rewritten for reliability\r\n  useEffect(() => {\r\n    if (isTimerRunning) {\r\n      // Record the start time of this session\r\n      startTimeRef.current = Date.now();\r\n\r\n      timerRef.current = setInterval(() => {\r\n        // Calculate current session time\r\n        const sessionTime = Math.floor(\r\n          (Date.now() - startTimeRef.current) / 1000\r\n        );\r\n        // Update elapsed seconds for this session\r\n        setElapsedSeconds(sessionTime);\r\n\r\n        // Check for minute increments (every 60 seconds)\r\n        if (sessionTime > 0 && sessionTime % 60 === 0) {\r\n          // Update daily tracked minutes\r\n          setDailyTrackedMinutes((prev) => prev + 1);\r\n\r\n          // Check for level gain (every 5 minutes = 300 seconds)\r\n          if (sessionTime % 300 === 0) {\r\n            gainLevel();\r\n          }\r\n        }\r\n      }, 1000);\r\n    } else {\r\n      // Just clear the timer interval - we'll update totalTime in toggleTimer\r\n      clearInterval(timerRef.current);\r\n    }\r\n\r\n    // Cleanup on unmount\r\n    return () => {\r\n      clearInterval(timerRef.current);\r\n    };\r\n  }, [isTimerRunning]);\r\n\r\n  // Function to gain a level\r\n  const gainLevel = () => {\r\n    // Increment level\r\n    setLevel((prevLevel) => prevLevel + 1);\r\n\r\n    // Increment levels gained today\r\n    setLevelsGained((prev) => prev + 1);\r\n\r\n    // Check if job should change based on new level\r\n    const newLevel = level + 1;\r\n    updateJobBasedOnLevel(newLevel, jobClass);\r\n\r\n    // Play a sound or animation here in a full implementation\r\n    console.log(\"Level up!\");\r\n  };\r\n\r\n  // Get the base class color scheme\r\n  const getClassColorScheme = () => {\r\n    switch (jobClass) {\r\n      case \"Swordsman\":\r\n        return {\r\n          badge: \"bg-red-100 text-red-800\",\r\n          progress: \"bg-red-600\",\r\n          next: \"bg-red-500\",\r\n          character: \"bg-red-500\",\r\n        };\r\n      case \"Archer\":\r\n        return {\r\n          badge: \"bg-green-100 text-green-800\",\r\n          progress: \"bg-green-600\",\r\n          next: \"bg-green-500\",\r\n          character: \"bg-green-500\",\r\n        };\r\n      case \"Mage\":\r\n        return {\r\n          badge: \"bg-purple-100 text-purple-800\",\r\n          progress: \"bg-purple-600\",\r\n          next: \"bg-purple-500\",\r\n          character: \"bg-purple-500\",\r\n        };\r\n      case \"Thief\":\r\n        return {\r\n          badge: \"bg-gray-100 text-gray-800\",\r\n          progress: \"bg-gray-600\",\r\n          next: \"bg-gray-500\",\r\n          character: \"bg-gray-500\",\r\n        };\r\n      case \"Acolyte\":\r\n        return {\r\n          badge: \"bg-yellow-100 text-yellow-800\",\r\n          progress: \"bg-yellow-600\",\r\n          next: \"bg-yellow-500\",\r\n          character: \"bg-yellow-500\",\r\n        };\r\n      case \"Merchant\":\r\n        return {\r\n          badge: \"bg-amber-100 text-amber-800\",\r\n          progress: \"bg-amber-600\",\r\n          next: \"bg-amber-500\",\r\n          character: \"bg-amber-500\",\r\n        };\r\n      default:\r\n        return {\r\n          badge: \"bg-blue-100 text-blue-800\",\r\n          progress: \"bg-blue-600\",\r\n          next: \"bg-blue-500\",\r\n          character: \"bg-blue-500\",\r\n        };\r\n    }\r\n  };\r\n\r\n  const colors = getClassColorScheme();\r\n\r\n  // Calculate next job threshold based on class\r\n  const getNextJobInfo = () => {\r\n    // Define job progressions for different classes\r\n    const jobProgressions = {\r\n      Swordsman: [\r\n        { level: 11, job: \"Swordsman\" },\r\n        { level: 31, job: \"Knight\" },\r\n        { level: 51, job: \"Lord Knight\" },\r\n        { level: 71, job: \"Rune Knight\" },\r\n        { level: 91, job: \"Eternal Knight\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n      Archer: [\r\n        { level: 11, job: \"Archer\" },\r\n        { level: 31, job: \"Hunter\" },\r\n        { level: 51, job: \"Sniper\" },\r\n        { level: 71, job: \"Falcon Ranger\" },\r\n        { level: 91, job: \"Eternal Marksman\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n      Mage: [\r\n        { level: 11, job: \"Mage\" },\r\n        { level: 31, job: \"Wizard\" },\r\n        { level: 51, job: \"High Wizard\" },\r\n        { level: 71, job: \"Archmage\" },\r\n        { level: 91, job: \"Eternal Sorcerer\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n      Thief: [\r\n        { level: 11, job: \"Thief\" },\r\n        { level: 31, job: \"Assassin\" },\r\n        { level: 51, job: \"Guillotine Cross\" },\r\n        { level: 71, job: \"Shadow Reaper\" },\r\n        { level: 91, job: \"Eternal Phantom\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n      Acolyte: [\r\n        { level: 11, job: \"Acolyte\" },\r\n        { level: 31, job: \"Priest\" },\r\n        { level: 51, job: \"High Priest\" },\r\n        { level: 71, job: \"Divine Cleric\" },\r\n        { level: 91, job: \"Eternal Saint\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n      Merchant: [\r\n        { level: 11, job: \"Merchant\" },\r\n        { level: 31, job: \"Blacksmith\" },\r\n        { level: 51, job: \"Whitesmith\" },\r\n        { level: 71, job: \"Titan Forgemaster\" },\r\n        { level: 91, job: \"Eternal Tycoon\" },\r\n        { level: 100, job: \"Max Level\" },\r\n      ],\r\n    };\r\n\r\n    // Get the progression for the current class\r\n    const progression = jobProgressions[jobClass] || jobProgressions.Swordsman;\r\n\r\n    // Find the next job in the progression\r\n    for (const jobInfo of progression) {\r\n      if (level < jobInfo.level) {\r\n        return jobInfo;\r\n      }\r\n    }\r\n\r\n    // If at max level\r\n    return progression[progression.length - 1];\r\n  };\r\n\r\n  const nextJobInfo = getNextJobInfo();\r\n\r\n  // Calculate progress to next job\r\n  const jobProgressPercentage = (level / nextJobInfo.level) * 100;\r\n\r\n  // Handle class selection\r\n  const selectClass = (className) => {\r\n    setJobClass(className);\r\n    // Reset job if needed based on level\r\n    updateJobBasedOnLevel(level, className);\r\n    setShowClassSelector(false);\r\n  };\r\n\r\n  // Update job title based on level and selected class\r\n  const updateJobBasedOnLevel = (currentLevel, selectedClass) => {\r\n    const jobProgressions = {\r\n      Swordsman: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Swordsman\" },\r\n        { level: 31, job: \"Knight\" },\r\n        { level: 51, job: \"Lord Knight\" },\r\n        { level: 71, job: \"Rune Knight\" },\r\n        { level: 91, job: \"Eternal Knight\" },\r\n      ],\r\n      Archer: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Archer\" },\r\n        { level: 31, job: \"Hunter\" },\r\n        { level: 51, job: \"Sniper\" },\r\n        { level: 71, job: \"Falcon Ranger\" },\r\n        { level: 91, job: \"Eternal Marksman\" },\r\n      ],\r\n      Mage: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Mage\" },\r\n        { level: 31, job: \"Wizard\" },\r\n        { level: 51, job: \"High Wizard\" },\r\n        { level: 71, job: \"Archmage\" },\r\n        { level: 91, job: \"Eternal Sorcerer\" },\r\n      ],\r\n      Thief: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Thief\" },\r\n        { level: 31, job: \"Assassin\" },\r\n        { level: 51, job: \"Guillotine Cross\" },\r\n        { level: 71, job: \"Shadow Reaper\" },\r\n        { level: 91, job: \"Eternal Phantom\" },\r\n      ],\r\n      Acolyte: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Acolyte\" },\r\n        { level: 31, job: \"Priest\" },\r\n        { level: 51, job: \"High Priest\" },\r\n        { level: 71, job: \"Divine Cleric\" },\r\n        { level: 91, job: \"Eternal Saint\" },\r\n      ],\r\n      Merchant: [\r\n        { level: 1, job: \"Novice\" },\r\n        { level: 11, job: \"Merchant\" },\r\n        { level: 31, job: \"Blacksmith\" },\r\n        { level: 51, job: \"Whitesmith\" },\r\n        { level: 71, job: \"Titan Forgemaster\" },\r\n        { level: 91, job: \"Eternal Tycoon\" },\r\n      ],\r\n    };\r\n\r\n    // Get the progression for the selected class\r\n    const progression =\r\n      jobProgressions[selectedClass] || jobProgressions.Swordsman;\r\n\r\n    // Find the current job based on level\r\n    let currentJob = progression[0].job;\r\n    for (let i = progression.length - 1; i >= 0; i--) {\r\n      if (currentLevel >= progression[i].level) {\r\n        currentJob = progression[i].job;\r\n        break;\r\n      }\r\n    }\r\n\r\n    setJob(currentJob);\r\n  };\r\n\r\n  const toggleTimer = () => {\r\n    // If we're stopping the timer\r\n    if (isTimerRunning) {\r\n      // Add current session time to total time\r\n      setTotalTimeTrackedSeconds((prev) => prev + elapsedSeconds);\r\n\r\n      // Save progress\r\n      setTimeout(() => saveData(), 100);\r\n    } else {\r\n      // Starting the timer, reset session time\r\n      setElapsedSeconds(0);\r\n    }\r\n\r\n    // Toggle timer state\r\n    setIsTimerRunning(!isTimerRunning);\r\n  };\r\n\r\n  // Reset timer functionality\r\n  const resetTimer = () => {\r\n    // Stop timer if running\r\n    if (isTimerRunning) {\r\n      setIsTimerRunning(false);\r\n    }\r\n\r\n    // Reset all timer values\r\n    setTotalTimeTrackedSeconds(0);\r\n    setElapsedSeconds(0);\r\n    setDailyTrackedMinutes(0);\r\n    setLevelsGained(0);\r\n\r\n    // Save the reset state\r\n    setTimeout(() => saveData(), 100);\r\n\r\n    // Hide confirmation\r\n    setShowResetConfirm(false);\r\n  };\r\n\r\n  const toggleTaskCompletion = (id) => {\r\n    setTaskList(\r\n      taskList.map((task) =>\r\n        task.id === id ? { ...task, completed: !task.completed } : task\r\n      )\r\n    );\r\n    // Save task state\r\n    setTimeout(saveData, 100);\r\n  };\r\n\r\n  const deleteTask = (id) => {\r\n    setTaskList(taskList.filter((task) => task.id !== id));\r\n    // Save task state\r\n    setTimeout(saveData, 100);\r\n  };\r\n\r\n  const addNewTask = () => {\r\n    if (newTaskName.trim() === \"\") return;\r\n\r\n    const newTask = {\r\n      id: Date.now(), // Unique ID based on timestamp\r\n      name: newTaskName,\r\n      completed: false,\r\n    };\r\n\r\n    setTaskList([...taskList, newTask]);\r\n    setNewTaskName(\"\");\r\n    setShowAddTask(false);\r\n\r\n    // Save task state\r\n    setTimeout(saveData, 100);\r\n  };\r\n\r\n  // Calculate daily progress percentage\r\n  const dailyProgressPercentage = Math.min(\r\n    (dailyTrackedMinutes / dailyGoalMinutes) * 100,\r\n    100\r\n  );\r\n\r\n  return (\r\n    <div className=\"font-sans p-4 max-w-md mx-auto bg-gray-100 rounded-lg shadow-md\">\r\n      {/* Header with Save Button */}\r\n      <div className=\"flex justify-between items-center mb-3\">\r\n        <h1 className=\"text-xl font-bold\">Real-Life RPG</h1>\r\n        <div className=\"flex gap-2\">\r\n          <button\r\n            onClick={saveData}\r\n            className=\"flex items-center text-xs px-2 py-1 bg-blue-100 text-blue-800 hover:bg-blue-200 rounded-md\"\r\n          >\r\n            <Save size={14} className=\"mr-1\" /> Save\r\n          </button>\r\n          <button\r\n            onClick={resetDailyProgress}\r\n            className=\"flex items-center text-xs px-2 py-1 bg-gray-100 text-gray-800 hover:bg-gray-200 rounded-md\"\r\n          >\r\n            <Clock size={14} className=\"mr-1\" /> Reset Day\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Character Info & Class Selector */}\r\n      <div className=\"bg-white p-4 rounded-lg mb-4 shadow\">\r\n        <div className=\"flex justify-between items-center mb-2\">\r\n          <h2 className=\"text-xl font-bold\">Your Character</h2>\r\n          <div className=\"flex gap-2 items-center\">\r\n            <button\r\n              onClick={() => setShowClassSelector(!showClassSelector)}\r\n              className=\"text-xs px-2 py-1 bg-gray-100 hover:bg-gray-200 rounded-md\"\r\n            >\r\n              Change Class\r\n            </button>\r\n            <div\r\n              className={`px-3 py-1 rounded-full text-sm font-medium ${colors.badge}`}\r\n            >\r\n              {job}\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Class Selector Dropdown */}\r\n        {showClassSelector && (\r\n          <div className=\"mb-4 p-3 bg-gray-50 rounded-lg border border-gray-200\">\r\n            <div className=\"text-sm font-medium mb-2\">Select Job Class:</div>\r\n            <div className=\"grid grid-cols-2 gap-2\">\r\n              <button\r\n                onClick={() => selectClass(\"Swordsman\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Swordsman\"\r\n                    ? \"bg-red-100 text-red-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Swordsman\r\n              </button>\r\n              <button\r\n                onClick={() => selectClass(\"Archer\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Archer\"\r\n                    ? \"bg-green-100 text-green-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Archer\r\n              </button>\r\n              <button\r\n                onClick={() => selectClass(\"Mage\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Mage\"\r\n                    ? \"bg-purple-100 text-purple-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Mage\r\n              </button>\r\n              <button\r\n                onClick={() => selectClass(\"Thief\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Thief\"\r\n                    ? \"bg-gray-100 text-gray-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Thief\r\n              </button>\r\n              <button\r\n                onClick={() => selectClass(\"Acolyte\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Acolyte\"\r\n                    ? \"bg-yellow-100 text-yellow-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Acolyte\r\n              </button>\r\n              <button\r\n                onClick={() => selectClass(\"Merchant\")}\r\n                className={`p-2 rounded-md text-xs text-center ${\r\n                  jobClass === \"Merchant\"\r\n                    ? \"bg-amber-100 text-amber-800 font-bold\"\r\n                    : \"bg-gray-100 hover:bg-gray-200\"\r\n                }`}\r\n              >\r\n                Merchant\r\n              </button>\r\n            </div>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mb-4\">\r\n          <div className=\"flex justify-between mb-1\">\r\n            <span className=\"text-sm font-medium\">Level {level}</span>\r\n            <span className=\"text-sm font-medium\">\r\n              {exp}/{expToLevel} EXP\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n            <div\r\n              className={`h-2 rounded-full ${colors.progress}`}\r\n              style={{ width: `${expPercentage}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"mb-2\">\r\n          <div className=\"flex justify-between mb-1\">\r\n            <span className=\"text-sm font-medium\">\r\n              Next Job: {nextJobInfo.job}\r\n            </span>\r\n            <span className=\"text-sm font-medium\">\r\n              Level {level}/{nextJobInfo.level}\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n            <div\r\n              className={`h-2 rounded-full ${colors.next}`}\r\n              style={{ width: `${jobProgressPercentage}%` }}\r\n            ></div>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"text-xs text-gray-500 mt-3 pt-2 border-t border-gray-100\">\r\n          <div className=\"flex justify-between items-center\">\r\n            <span>Novice</span>\r\n            <span>{jobClass === \"Novice\" ? \"Novice\" : jobClass}</span>\r\n            <span>\r\n              {jobClass === \"Swordsman\"\r\n                ? \"Knight\"\r\n                : jobClass === \"Archer\"\r\n                ? \"Hunter\"\r\n                : jobClass === \"Mage\"\r\n                ? \"Wizard\"\r\n                : jobClass === \"Thief\"\r\n                ? \"Assassin\"\r\n                : jobClass === \"Acolyte\"\r\n                ? \"Priest\"\r\n                : jobClass === \"Merchant\"\r\n                ? \"Blacksmith\"\r\n                : \"\"}\r\n            </span>\r\n            <span>\r\n              {jobClass === \"Swordsman\"\r\n                ? \"Lord Knight\"\r\n                : jobClass === \"Archer\"\r\n                ? \"Sniper\"\r\n                : jobClass === \"Mage\"\r\n                ? \"High Wizard\"\r\n                : jobClass === \"Thief\"\r\n                ? \"Guillotine Cross\"\r\n                : jobClass === \"Acolyte\"\r\n                ? \"High Priest\"\r\n                : jobClass === \"Merchant\"\r\n                ? \"Whitesmith\"\r\n                : \"\"}\r\n            </span>\r\n            <span>\r\n              {jobClass === \"Swordsman\"\r\n                ? \"Rune Knight\"\r\n                : jobClass === \"Archer\"\r\n                ? \"Falcon Ranger\"\r\n                : jobClass === \"Mage\"\r\n                ? \"Archmage\"\r\n                : jobClass === \"Thief\"\r\n                ? \"Shadow Reaper\"\r\n                : jobClass === \"Acolyte\"\r\n                ? \"Divine Cleric\"\r\n                : jobClass === \"Merchant\"\r\n                ? \"Titan Forgemaster\"\r\n                : \"\"}\r\n            </span>\r\n            <span>\r\n              {jobClass === \"Swordsman\"\r\n                ? \"Eternal Knight\"\r\n                : jobClass === \"Archer\"\r\n                ? \"Eternal Marksman\"\r\n                : jobClass === \"Mage\"\r\n                ? \"Eternal Sorcerer\"\r\n                : jobClass === \"Thief\"\r\n                ? \"Eternal Phantom\"\r\n                : jobClass === \"Acolyte\"\r\n                ? \"Eternal Saint\"\r\n                : jobClass === \"Merchant\"\r\n                ? \"Eternal Tycoon\"\r\n                : \"\"}\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-1 mt-1\">\r\n            <div\r\n              className={`h-1 rounded-l-full bg-gray-500`}\r\n              style={{ width: `${(level / 100) * 100}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"flex justify-between text-gray-400 mt-1\">\r\n            <span>1</span>\r\n            <span>11</span>\r\n            <span>31</span>\r\n            <span>51</span>\r\n            <span>71</span>\r\n            <span>91</span>\r\n            <span>100</span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Character Scene */}\r\n      <div className=\"w-full h-48 bg-gradient-to-b from-orange-200 via-red-200 to-purple-300 rounded-lg mb-4 relative overflow-hidden\">\r\n        <div className=\"absolute bottom-0 w-full h-16 bg-gray-800\"></div>\r\n        <div className=\"absolute bottom-16 left-1/4 w-32 h-32 flex items-center justify-center\">\r\n          {/* Character Placeholder */}\r\n          <img\r\n            src={`/images/characters/${job\r\n              .toLowerCase()\r\n              .replace(\" \", \"-\")}.png`}\r\n            alt={job}\r\n            className=\"h-40 object-contain\"\r\n          />\r\n        </div>\r\n\r\n        {/* Class Icon */}\r\n        <div className=\"absolute top-2 right-2 bg-white bg-opacity-70 p-2 rounded-full\">\r\n          {jobClass === \"Swordsman\" && (\r\n            <div className=\"w-8 h-8 bg-red-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              S\r\n            </div>\r\n          )}\r\n          {jobClass === \"Archer\" && (\r\n            <div className=\"w-8 h-8 bg-green-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              A\r\n            </div>\r\n          )}\r\n          {jobClass === \"Mage\" && (\r\n            <div className=\"w-8 h-8 bg-purple-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              M\r\n            </div>\r\n          )}\r\n          {jobClass === \"Thief\" && (\r\n            <div className=\"w-8 h-8 bg-gray-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              T\r\n            </div>\r\n          )}\r\n          {jobClass === \"Acolyte\" && (\r\n            <div className=\"w-8 h-8 bg-yellow-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              A\r\n            </div>\r\n          )}\r\n          {jobClass === \"Merchant\" && (\r\n            <div className=\"w-8 h-8 bg-amber-500 rounded-full flex items-center justify-center text-white font-bold\">\r\n              M\r\n            </div>\r\n          )}\r\n        </div>\r\n\r\n        {/* Level Display */}\r\n        <div className=\"absolute bottom-2 left-2 bg-white bg-opacity-70 px-2 py-1 rounded-md text-sm font-bold\">\r\n          LVL {level}\r\n        </div>\r\n      </div>\r\n\r\n      {/* Timer - THE CORE LEVELING MECHANISM */}\r\n      <div className=\"bg-white p-4 rounded-lg mb-4 shadow border-2 border-green-300\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <h2 className=\"text-lg font-semibold\">Training Session</h2>\r\n          <div className=\"text-sm font-bold text-green-600 bg-green-100 px-2 py-1 rounded\">\r\n            LEVEL SOURCE\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"flex items-center justify-center space-x-4\">\r\n          <div className=\"text-center\">\r\n            <div className=\"text-3xl font-bold mb-1\">{getTimeDisplay()}</div>\r\n            <div className=\"text-sm text-gray-500 font-bold\">\r\n              {levelsGained} levels gained today\r\n            </div>\r\n            <div className=\"text-sm bg-green-100 text-green-800 px-2 py-1 mt-1 rounded-md\">\r\n              5 minutes = 1 level\r\n            </div>\r\n            {/* Reset Timer Button */}\r\n            <button\r\n              onClick={() => setShowResetConfirm(true)}\r\n              className=\"text-xs text-red-600 hover:text-red-800 mt-2\"\r\n            >\r\n              Reset Timer\r\n            </button>\r\n          </div>\r\n          <button\r\n            onClick={toggleTimer}\r\n            className={`p-4 rounded-full ${\r\n              isTimerRunning\r\n                ? \"bg-red-100 text-red-500\"\r\n                : \"bg-green-500 text-white\"\r\n            }`}\r\n          >\r\n            {isTimerRunning ? <Pause size={28} /> : <Play size={28} />}\r\n          </button>\r\n        </div>\r\n\r\n        <div className=\"mt-4 pt-3 border-t border-gray-100\">\r\n          <div className=\"flex justify-between text-xs text-gray-500 mb-1\">\r\n            <span>Daily Progress</span>\r\n            <span>\r\n              {Math.floor(dailyTrackedMinutes / 60)}h {dailyTrackedMinutes % 60}\r\n              m / {Math.floor(dailyGoalMinutes / 60)}h goal (\r\n              {Math.floor(dailyTrackedMinutes / 5)} levels)\r\n            </span>\r\n          </div>\r\n          <div className=\"w-full bg-gray-200 rounded-full h-2\">\r\n            <div\r\n              className=\"bg-green-500 h-2 rounded-full\"\r\n              style={{ width: `${dailyProgressPercentage}%` }}\r\n            ></div>\r\n          </div>\r\n          <div className=\"flex justify-between text-xs text-gray-500 mt-3\">\r\n            <div>\r\n              Level Progress:\r\n              <span className=\"font-medium text-green-600\">\r\n                {\" \"}\r\n                5 mins = 1 level\r\n              </span>\r\n            </div>\r\n            <div>\r\n              Current pace:\r\n              <span className=\"font-medium text-green-600\">\r\n                {\" \"}\r\n                12 levels/hour\r\n              </span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Reset Confirmation Modal */}\r\n        {showResetConfirm && (\r\n          <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50\">\r\n            <div className=\"bg-white p-4 rounded-lg max-w-sm w-full mx-4\">\r\n              <h3 className=\"text-lg font-bold mb-2\">Reset Timer?</h3>\r\n              <p className=\"text-gray-600 mb-4\">\r\n                This will reset your timer to 00:00:00. Your progress for today\r\n                will be lost. Are you sure?\r\n              </p>\r\n              <div className=\"flex justify-end space-x-2\">\r\n                <button\r\n                  onClick={() => setShowResetConfirm(false)}\r\n                  className=\"px-4 py-2 border border-gray-300 rounded text-gray-700\"\r\n                >\r\n                  Cancel\r\n                </button>\r\n                <button\r\n                  onClick={resetTimer}\r\n                  className=\"px-4 py-2 bg-red-600 text-white rounded\"\r\n                >\r\n                  Reset\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      {/* Task List */}\r\n      <div className=\"bg-white p-4 rounded-lg shadow\">\r\n        <div className=\"flex justify-between items-center mb-3\">\r\n          <div>\r\n            <h2 className=\"text-lg font-semibold\">Quests / To-Do List</h2>\r\n            <div className=\"text-xs text-gray-500 mt-1\">\r\n              {taskList.filter((task) => task.completed).length}/\r\n              {taskList.length} completed\r\n            </div>\r\n          </div>\r\n          <button\r\n            onClick={() => setShowAddTask(!showAddTask)}\r\n            className=\"text-blue-500 flex items-center text-sm\"\r\n          >\r\n            {showAddTask ? (\r\n              <X size={16} className=\"mr-1\" />\r\n            ) : (\r\n              <Plus size={16} className=\"mr-1\" />\r\n            )}\r\n            {showAddTask ? \"Cancel\" : \"Add Task\"}\r\n          </button>\r\n        </div>\r\n\r\n        {/* Add Task Form */}\r\n        {showAddTask && (\r\n          <div className=\"mb-3 p-3 bg-blue-50 rounded-lg border border-blue-200\">\r\n            <input\r\n              type=\"text\"\r\n              value={newTaskName}\r\n              onChange={(e) => setNewTaskName(e.target.value)}\r\n              placeholder=\"Enter new task...\"\r\n              className=\"w-full p-2 rounded border border-blue-200 mb-2\"\r\n            />\r\n            <button\r\n              onClick={addNewTask}\r\n              className=\"bg-blue-500 text-white px-3 py-1 rounded-md text-sm\"\r\n              disabled={newTaskName.trim() === \"\"}\r\n            >\r\n              Add Quest\r\n            </button>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"mb-3 p-2 bg-yellow-50 border border-yellow-200 rounded-md text-xs text-yellow-700\">\r\n          <strong>Note:</strong> Tasks don't affect leveling. Only running the\r\n          timer counts toward levels (5 mins = 1 level).\r\n        </div>\r\n\r\n        <ul className=\"space-y-2\">\r\n          {/* Sort the tasks - incomplete tasks first, then completed tasks */}\r\n          {[...taskList]\r\n            .sort((a, b) => {\r\n              // Sort by completion status (incomplete first)\r\n              if (a.completed !== b.completed) {\r\n                return a.completed ? 1 : -1;\r\n              }\r\n              // Keep original order within each group\r\n              return 0;\r\n            })\r\n            .map((task) => (\r\n              <li\r\n                key={task.id}\r\n                className={`p-3 rounded-lg flex items-center justify-between ${\r\n                  task.completed ? \"bg-gray-100\" : \"bg-blue-50\"\r\n                }`}\r\n              >\r\n                <span\r\n                  className={task.completed ? \"line-through text-gray-500\" : \"\"}\r\n                >\r\n                  {task.name}\r\n                </span>\r\n                <div className=\"flex space-x-1\">\r\n                  <button\r\n                    onClick={() => toggleTaskCompletion(task.id)}\r\n                    className={`p-1 rounded-full ${\r\n                      task.completed ? \"text-green-500\" : \"text-gray-400\"\r\n                    } hover:bg-gray-100`}\r\n                    title=\"Mark as complete\"\r\n                  >\r\n                    <CheckCircle\r\n                      size={20}\r\n                      className={task.completed ? \"fill-green-500\" : \"\"}\r\n                    />\r\n                  </button>\r\n                  <button\r\n                    onClick={() => deleteTask(task.id)}\r\n                    className=\"p-1 rounded-full text-red-400 hover:bg-gray-100\"\r\n                    title=\"Delete task\"\r\n                  >\r\n                    <Trash2 size={20} />\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n        </ul>\r\n\r\n        {taskList.length === 0 && (\r\n          <div className=\"text-center py-6 text-gray-500\">\r\n            No quests yet. Add your first quest!\r\n          </div>\r\n        )}\r\n\r\n        {taskList.length > 0 && (\r\n          <div className=\"mt-4 text-center\">\r\n            <button className=\"text-blue-600 text-sm flex items-center mx-auto\">\r\n              See all quests <ArrowRight size={16} className=\"ml-1\" />\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RealLifeRPG;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}